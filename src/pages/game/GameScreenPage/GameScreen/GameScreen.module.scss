.root {
  display: flex;
  width: 100%;
  flex-direction: column;
  justify-content: center;
  flex: 1;
  overflow: hidden;
  transition: background $transitionTimeMs;
}

.DEBUG,
.finishedComplete,
.overButtons,
.active,
.finished,
.answered {
  /*!KEEP*/
}

.overContent {
  // Texts container
  // border: 1px dashed green; // DEBUG
  position: absolute;
  margin: 0;
  top: 35%;
  left: 50%;
  transform: translate(-50%, -50%);
  flex-direction: column;
  // &:global(.MuiStack-root) {
  //   gap: 4vw;
  // }
  justify-content: center;
  align-items: center;
}

.video {
  outline: unset;
  border: none;
  clip-path: inset(0px);
  object-fit: contain;
  transition: opacity $transitionTimeMs;
  opacity: 1;
  .videoComplete & {
    opacity: 0.8;
  }
  max-width: 100%;
  max-height: 100%;
}

.curtain,
.overContainer {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  pointer-events: none;
  opacity: 0;
  transition:
    all $transitionTimeMs,
    opacity $effectTimeMs,
    background $effectTimeMs;
}

.overBox {
  position: relative;
  width: 0;
  height: 0;
  display: flex;
  gap: 4vw;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  .DEBUG & {
    border: 2px dashed red; // DEBUG
  }
}

.overContainer {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  flex: 1;
  overflow: hidden;
  opacity: 0;
  pointer-events: none;
  .DEBUG &,
  .videoComplete & {
    opacity: 1;
    pointer-events: all;
    background-color: color.change(black, $alpha: 0.85);
  }
  // .answered & {
  //   opacity: 1;
  //   background-color: color.change(black, $alpha: 0.9);
  // }
}

.curtain {
  background-color: $videoBlueColor;
  background: $videoBgGradient;
  opacity: 1;
  pointer-events: all;
  .active & {
    opacity: 0;
    pointer-events: none;
  }
}

.overButtons {
  display: flex;
  gap: 2vw;
  flex-direction: column;
  justify-content: center;
  align-items: stretch;
  padding: 2vw;
}

$buttonBorderWidth: 1vw;
$buttonHoverFilters: brightness(110%) contrast(110%);
$buttonBlurFilters: blur(0.2vw);
$textShadowSize: 0.2vw;

.button {
  &:global(.MuiButtonBase-root) {
    overflow: hidden;
    &:before {
      background: linear-gradient(165deg, transparent 0%, black 100%);
      content: '';
      position: absolute;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      opacity: 0.5;
      transition: all $transitionTimeMs;
    }
    transition: all $transitionTimeMs;
    font-size: 3vw;
    background-color: $videoRedColor;
    border: 0.5vw solid color.change(white, $alpha: 0.8);
    border-radius: 2vw;
    color: white; // color.mix(white, $videoRedColor, 100%);
    text-shadow: $textShadowSize $textShadowSize color.change(black, $alpha: 0.4);
    padding: 2vw 5vw;
    box-shadow:
      0.4vw 0.4vw 0 0.4vw color.change(black, $alpha: 0.3),
      inset 0.2vw 0.2vw 0 0.4vw color.change(black, $alpha: 0.2);
    opacity: 0.8;

    &:hover {
      opacity: 1;
      &:before {
        opacity: 0.3;
      }
    }
    &:active {
      &:before {
        opacity: 0.8;
      }
    }
  }
}

$textShadowSize: 0.4vmin;

.finalImage {
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
}

.showQuestion,
.showQuote,
.showComment {
  color: #fff;
  // font-size: 5vmin;
}
.showComment {
  text-shadow: $textShadowSize $textShadowSize color.change(black, $alpha: 0.4);
  font-size: 80%;
}
.showQuote {
  $bgColor: $videoBlueColor;
  // $bgColor: #fff;
  background-color: $bgColor;
  // color: $videoBlueColor;
  color: #fff;
  font-weight: 400;
  text-shadow: $textShadowSize $textShadowSize color.change(black, $alpha: 0.4);
  padding: 3vmin 4vmin;
  border-radius: 4vmin;
  box-shadow:
    0.2vmin 0.2vmin 0 0.3vmin color.change(black, $alpha: 0.3);
    // inset 0.1vmin 0.1vmin 0 0.2vmin color.change(black, $alpha: 0.2);
  opacity: 0.9;
  position: relative;
  &::before {
    left: -.9em;
    bottom: 1em;
    border-top: 0.5em solid transparent;
    border-bottom: 0.5em solid transparent;
    border-right: 1em solid $bgColor;
    box-sizing: border-box;
    content: '';
    width: 0;
    height: 0;
    position: absolute;
  }
}

.finalButton {
  &:global(.MuiButtonBase-root) {
    overflow: hidden;
    &:before {
      background: linear-gradient(165deg, transparent 0%, black 100%);
      content: '';
      position: absolute;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      opacity: 0.5;
      transition: all $transitionTimeMs;
    }
    transition: all $transitionTimeMs;
    $bgColor: $videoBlueColor;
    background-color: $bgColor;
    background-color: $videoRedColor;
    border-style: solid;
    border-color: color.change(white, $alpha: 0.8);
    font-size: 5vmin;
    color: color.mix(white, $bgColor, 100%);
    text-shadow: $textShadowSize $textShadowSize color.change(black, $alpha: 0.4);
    padding: 1vmin 4vmin;
    border-radius: 10vmin;
    box-shadow:
      0.2vmin 0.2vmin 0 0.3vmin color.change(black, $alpha: 0.3),
      inset 0.1vmin 0.1vmin 0 0.2vmin color.change(black, $alpha: 0.2);
    opacity: 0.8;
    &:hover {
      opacity: 1;
      &:before {
        // opacity: 0.3;
      }
    }
    &:active {
      &:before {
        opacity: 0.8;
      }
    }
    :global(.MuiSvgIcon-root) {
      font-size: 1em;
    }
  }
}
